1) global همان  window  فرانت 
است در 
که برای بهینه تر از  آن هم global ||  globalThis  میتوان استفاده کردد
----------------------------------------------------
2)
  در استفاده از کامند بجای import   از reqire  in node استتفادع میکنیم  
   در تظز داشته باش که برای خروجی هر جی میخوای از module.exports.isLogin = x;
  استفاده  میکنیم


-----------------
3)  ساختن  http  
const serve=http.createServer((req,res)=>{
    console.log(req.method);  ساختن متود که چه چیزی رو برمیگردونه
    console.log(req.url);  داره ادرس میگیره   
})
serve.listen(3005,()=>{
    console.log("server runing port 3005");
    
})

کافی  با کلمه  write , emd  
اطلاعات نشون داد و دیگر نمیچرخد یک جایی توقف میشود
در Node.js، res.end() برای خاتمه دادن به پاسخ (response) و ارسال داده به سمت کلاینت استفاده می‌شود.


-------------

برای ساختن در writehead   فقط یک نوع ساختار میشه
از طرفی فقط یک بار میشه استفاده کرد در ان صفحه  
 res.writeHead(200,{"content-type":"application/json"})
 و ساختار دیفالت text/plain   است 
 باید بحای پلینک بنویس html

 انواع رایج Content-Type
text/plain:

معنی: این نوع داده، متنی ساده و بدون قالب‌بندی است.
مثال: ارسال یک فایل متنی ساده.
کاربرد: معمولاً برای ارسال متن ساده یا لاگ‌ها استفاده می‌شود


multipart/form-data:

معنی: این نوع محتوا برای ارسال داده‌های چندبخشی (مثلاً فایل‌ها و داده‌های فرم) در فرم‌ها استفاده می‌شود.
مثال: وقتی یک فرم HTML شامل فایل و داده به سرور ارسال می‌شود.
کاربرد: ارسال فایل‌ها و داده‌های فرم به سرور.
------------------------------------------------------------------------------